usethis::use_package("ggplot2")
usethis::use_package("reshape2")
ggplot2::ggplot()
geom_raster
geom_raster()
ggplot2:geom_raster()
ggplot2::geom_raster()
ggplot2::theme()
ggplot2::scale_fill_gradientn()
ggplot2::scale_fill_gradientn
library(roxygen2)
library(devtools)
devtools::load_all(".")
hotmap()
hotmap
hotmap(mat[1:5,1:5])
hotmap(matrix(1:5,1:5)
)
mat <- matrix(1:5)
hotmap(mat)
devtools::load_all(".")
devtools::load_all(".")
list.files()
# Plotting heatmaps
source("/Volumes/tirosh/sbjulie/latest/scripts/hcluster.R")
devtools::load_all(".")
hotmap(mat)
hotmap(mat, order=F)
hotmap(mat, order=F, ratio=1)
devtools::load_all(".")
usethis::use_cc0_license(MIT)
usethis::use_cc0_license("MIT")
devtools::load_all(".")
?hotmap
devtools::load_all(".")
??hotmap
??hotmap::hotmap
?hotmap::hotmap
devtools::load_all(".")
devtools::load_all(".")
usethis::use_package(package = "/Volumes/tirosh/sbjulie/R-libraries/hcluster")
install.packages(""/Volumes/tirosh/sbjulie/R-libraries/hcluster")
install.packages(/Volumes/tirosh/sbjulie/R-libraries/hcluster")
install.packages("/Volumes/tirosh/sbjulie/R-libraries/hcluster")
library(hcluster)
.libPaths()
usethis::use_package("hcluster")
usethis::use_package("/Volumes/tirosh/sbjulie/R-librarieshcluster")
usethis::use_package("/Volumes/tirosh/sbjulie/R-libraries/hcluster")
library(hcluster)
source('/Volumes/tirosh-1/sbjulie/R-packages/hotmap/R/hotmap.R')
source('/Volumes/tirosh-1/sbjulie/R-packages/hotmap/R/hotmap.R')
library(hcluster)
library('hcluster'')
library('hcluster')
library('hcluster', lib.loc = "../R-libraries")
setwd("")
library(ggplot2)
library(hcluster)
library(hcluster)
devtools::load_all(".")
rm(list=ls())
devtools::load_all(".")
?hotmap
ls()
devtools::load_all(".")
devtools::load_all(".")
install.packages("../hotmap_0.0.0.9000.tar.gz", lib = "../../R-libraries/", repos=NULL)
devtools::load_all(".")
install.packages("../hotmap_0.0.0.9000.tar.gz", lib = "../../R-libraries/", repos=NULL)
library(hotmap)
mat <- matrix(1:10, dimnames(, c("A:J")))
mat <- matrix(1:10, 2)
colnames(mat) <- c("A","B")
mat
mat <- matrix(1:10, 5)
colnames(mat) <- c("A","B")
mat
colnames(mat) <- as.factor(colnames(mat), levels=c("B", "A"))
order=F
order=F
x.order=F
y.order=F
any(isTRUE(order, x.order, y.order))
any(isTRUE(list(order, x.order, y.order)))
y.order=T
any(isTRUE(list(order, x.order, y.order)))
isTRUE(list(order, x.order, y.order))
any(list(order, x.order, y.order))
any(order, x.order, y.order)
y.order
y.order=F
any(order, x.order, y.order)
mat
reshape2::melt(mat)
mat
?reshape
rownames(mat) = c('a','b','c','d','e')
mat
reshape(as.data.frame(mat), idvar=c(colnames(mat), rownames(at)))
reshape(as.data.frame(mat), idvar=c(colnames(mat), rownames(mat)))
reshape(as.data.frame(mat), idvar=c(colnames(mat), rownames(mat)), direction='long')
melt(as.data.frame(mat), idvar=c(colnames(mat), rownames(mat)))
reshape2::melt(as.data.frame(mat), idvar=c(colnames(mat), rownames(mat)))
reshape2::melt(as.data.frame(mat), idvar=c(rownames(mat), colnames(mat))
)
?melt
?reshape2::melt
?melt.data.frame
melt.data.frame(hotmap_prep <- function(mat,
x.order=TRUE,
y.order=TRUE,
order=TRUE) {
# Order data
mat <- hotmap_order(mat=mat, x.order=x.order, y.order=y.order, order=order)
# Tidy data
mat <- reshape2::melt(t(mat))
mat
}
)
reshape2::melt.data.frame(as.data.frame(mat), id.vars=c(colnames(mat), rownames(mat)))
library(reshape2)
melt.data.frame(as.data.frame(mat), id.vars=c(colnames(mat), rownames(mat)))
melt.data.frame
?melt.data.frame
reshape2::melt.data.frame(as.data.frame(mat), id.vars=c(colnames(mat), rownames(mat)))
